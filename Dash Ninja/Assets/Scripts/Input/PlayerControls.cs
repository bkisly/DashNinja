//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""KeyboardMovement"",
            ""id"": ""fd5de796-9873-4c33-87ff-293f9da58c57"",
            ""actions"": [
                {
                    ""name"": ""Up"",
                    ""type"": ""Button"",
                    ""id"": ""2937a39c-6e2f-4d08-82d4-2cb353a789bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Down"",
                    ""type"": ""Button"",
                    ""id"": ""d77743e8-2c69-4300-9f4b-750340bbb527"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left"",
                    ""type"": ""Button"",
                    ""id"": ""cc1be373-5d80-458f-97b4-6091163c75ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right"",
                    ""type"": ""Button"",
                    ""id"": ""247bab68-97f5-44fc-98f7-99ecf279d9db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1f4eec9c-3e20-4edd-ac5e-b5b5c58dcc05"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fab929b1-a930-4b79-b194-52fc408c0780"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98e9cfeb-f694-4d45-9875-a142c40c861e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1059bae4-db7e-44b0-b603-73a5c02a4a9c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ba7b483-9c76-427d-8fa1-c01678e39764"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5b74642-b8e1-4490-afb6-088c625d47a8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d14fdfea-c84c-4cd9-a5a8-2828abff7997"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ef27a83-7864-4fc4-b64d-56e5ea92396c"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // KeyboardMovement
        m_KeyboardMovement = asset.FindActionMap("KeyboardMovement", throwIfNotFound: true);
        m_KeyboardMovement_Up = m_KeyboardMovement.FindAction("Up", throwIfNotFound: true);
        m_KeyboardMovement_Down = m_KeyboardMovement.FindAction("Down", throwIfNotFound: true);
        m_KeyboardMovement_Left = m_KeyboardMovement.FindAction("Left", throwIfNotFound: true);
        m_KeyboardMovement_Right = m_KeyboardMovement.FindAction("Right", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // KeyboardMovement
    private readonly InputActionMap m_KeyboardMovement;
    private IKeyboardMovementActions m_KeyboardMovementActionsCallbackInterface;
    private readonly InputAction m_KeyboardMovement_Up;
    private readonly InputAction m_KeyboardMovement_Down;
    private readonly InputAction m_KeyboardMovement_Left;
    private readonly InputAction m_KeyboardMovement_Right;
    public struct KeyboardMovementActions
    {
        private @PlayerControls m_Wrapper;
        public KeyboardMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Up => m_Wrapper.m_KeyboardMovement_Up;
        public InputAction @Down => m_Wrapper.m_KeyboardMovement_Down;
        public InputAction @Left => m_Wrapper.m_KeyboardMovement_Left;
        public InputAction @Right => m_Wrapper.m_KeyboardMovement_Right;
        public InputActionMap Get() { return m_Wrapper.m_KeyboardMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeyboardMovementActions set) { return set.Get(); }
        public void SetCallbacks(IKeyboardMovementActions instance)
        {
            if (m_Wrapper.m_KeyboardMovementActionsCallbackInterface != null)
            {
                @Up.started -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnUp;
                @Up.performed -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnUp;
                @Up.canceled -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnUp;
                @Down.started -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnDown;
                @Down.performed -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnDown;
                @Down.canceled -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnDown;
                @Left.started -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnLeft;
                @Left.performed -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnLeft;
                @Left.canceled -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnLeft;
                @Right.started -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnRight;
                @Right.performed -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnRight;
                @Right.canceled -= m_Wrapper.m_KeyboardMovementActionsCallbackInterface.OnRight;
            }
            m_Wrapper.m_KeyboardMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Up.started += instance.OnUp;
                @Up.performed += instance.OnUp;
                @Up.canceled += instance.OnUp;
                @Down.started += instance.OnDown;
                @Down.performed += instance.OnDown;
                @Down.canceled += instance.OnDown;
                @Left.started += instance.OnLeft;
                @Left.performed += instance.OnLeft;
                @Left.canceled += instance.OnLeft;
                @Right.started += instance.OnRight;
                @Right.performed += instance.OnRight;
                @Right.canceled += instance.OnRight;
            }
        }
    }
    public KeyboardMovementActions @KeyboardMovement => new KeyboardMovementActions(this);
    public interface IKeyboardMovementActions
    {
        void OnUp(InputAction.CallbackContext context);
        void OnDown(InputAction.CallbackContext context);
        void OnLeft(InputAction.CallbackContext context);
        void OnRight(InputAction.CallbackContext context);
    }
}
